#!/bin/bash

shopt -s expand_aliases

alias selectr='~/src/selectr/.cabal-sandbox/bin/selectr'

alias _muil_mail='selectr mu find -f \"d f s\|\|l\" \"%\" \| head -n 40'
alias _muil_personal_contacts='selectr mu cfind --personal "%" \| head -n 40'

# Search and view email
alias muv='mu view "$(_muil_mail)"'
# Search and view email in editor
alias mul="muv | $MUIL_EDITOR"
# Search contacts
alias muc='_muil_personal_contacts'
# Fetch and index emails
alias muf="mbsync -a && mu index --my-address=\"$MUIL_EMAIL\""

alias la='ls -a'
alias ll='ls -l'
alias lla='ls -la'

# .app's in /Applications
alias chrome='open -a "Google Chrome" --args'
alias chrome-canary='open -a "Google Chrome Canary" --args'

# Open an URL in a specific Google Chrome tab.
# Usage: chrometab <url> [tab-id]
function chrome-tab {
  id=$2
  if [ $id ]; then
    chrome-cli list tabs | grep -q ":$id"
    id=$([ $? == 0 ] && (chrome-cli open "$1" -t $id; echo $id))
  fi
  [ ! $id ] && id=$(chrome-cli open "$1" | grep -Eo '\d+')
  echo $id
}

# TODO: Get the correct lib path from cabal config.
# ghc-pkg-reset
# Removes all installed GHC/cabal packages, but not binaries, docs, etc.
# Use this to get out of dependency hell and start over, at the cost of some rebuilding time.
function ghc-pkg-reset {
  read -p 'erasing all your user ghc and cabal packages - are you sure (y/n) ? ' ans
  test x$ans == xy && ( \
    echo 'erasing directories under ~/.ghc'; rm -rf `find ~/.ghc -maxdepth 1 -type d`; \
    echo 'erasing ~/.cabal/lib'; rm -rf ~/.cabal/lib; \
    # echo 'erasing ~/.cabal/packages'; rm -rf ~/.cabal/packages; \
    # echo 'erasing ~/.cabal/share'; rm -rf ~/.cabal/share; \
    )
}

# TODO: Get the correct lib path from cabal config and check for a sandbox.
function hdocf {
  find ~/.cabal/share/doc/x86_64-osx-ghc-*/*/html \
    -iname "$(echo $1 | tr . -).html" -and -not -name "mini_*" -maxdepth 1 -exec basename {} .html \; | tr - .
}
function hdoci {
  cat ~/.cabal/share/doc/x86_64-osx-ghc-*/*/html/$(echo $1 | tr . -).html | pandoc -f html -t plain
}
function hdoc {
  hdoci $(hdocf $1 | head -n1)
}

. ~/.alias.local
